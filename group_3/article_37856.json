{
  "url": "https://www.wikihow.com/Run-Powershell",
  "title": "How to Run Powershell",
  "steps": [
    {
      "title": "Hit ⊞ Win+R.",
      "content": "Hit ⊞ Win + R . This will open a Run command window. If you don't want to use the Run command, you can also search the Start menu for “PowerShell”. PowerShell is included with versions of Windows 7 or later."
    },
    {
      "title": "Enter “PowerShell” into the text field.",
      "content": "Enter “PowerShell” into the text field."
    },
    {
      "title": "Click “OK”.",
      "content": "Click “OK”. A new PowerShell window will open."
    },
    {
      "title": "Go to https://github.com/PowerShell/PowerShell in your web browser.",
      "content": "Go to https://github.com/PowerShell/PowerShell in your web browser. This is the official github page for PowerShell."
    },
    {
      "title": "Download and install the .pkg file for Mac.",
      "content": "Download and install the .pkg file for Mac. You must be running OSX 10.11 or newer."
    },
    {
      "title": "Open the Launchpad.",
      "content": "Open the Launchpad. This is the rocket icon in the bottom dock."
    },
    {
      "title": "Enter \"Terminal\" into the search field.",
      "content": "Enter \"Terminal\" into the search field. You can also find the Terminal in \"Applications > Utilities\"."
    },
    {
      "title": "Launch Terminal.",
      "content": "Launch Terminal. A blank terminal window will appear."
    },
    {
      "title": "Enter “powershell” and hit ↵ Enter.",
      "content": "Enter “powershell” and hit ↵ Enter . A powershell prompt will appear with “PS” displayed. This means that powershell is running and you can use the Terminal to enter cmdlets."
    },
    {
      "title": "Go to https://github.com/PowerShell/PowerShell in your web browser.",
      "content": "Go to https://github.com/PowerShell/PowerShell in your web browser. This is the official github page for PowerShell."
    },
    {
      "title": "Download the .deb file for your corresponding version of Linux.",
      "content": "Download the .deb file for your corresponding version of Linux. PowerShell is available for Ubuntu 14.04 or 16.04. They have separate installers listed on the page."
    },
    {
      "title": "Open a Terminal window.",
      "content": "Open a Terminal window. You can hit ⊞ Win + Alt + T or click “Home” and search for “Terminal”."
    },
    {
      "title": "Enter “sudo dpkg -i [installer filename]” and hit ↵ Enter.",
      "content": "Enter “sudo dpkg -i [installer filename]” and hit ↵ Enter . You will be prompted to enter your computer password when using the “sudo” command. You may see a failure with unmet dependencies, but this will be resolved soon. The installer filename will look like “powershell_6.0.0-alpha.10-1ubuntu1.16.04.1_amd64.deb” or “powershell_6.0.0-alpha.10-1ubuntu1.14.04.1_amd64.deb” depending on which version of Ubuntu you are running."
    },
    {
      "title": "Enter “sudo apt-get install -f” and hit ↵ Enter.",
      "content": "Enter “sudo apt-get install -f” and hit ↵ Enter . This PowerShell configuration will complete."
    },
    {
      "title": "Enter “powershell” and hit ↵ Enter.",
      "content": "Enter “powershell” and hit ↵ Enter . A powershell prompt will appear and you can run cmdlets in the Terminal."
    },
    {
      "title": "Use “Get-Command” to find cmdlets.",
      "content": "Use “Get-Command” to find cmdlets. On its own, this cmdlet will display all other cmdlets. You can narrow your search using modifiers. For example: “Get-Command Name *Disable*” will display only cmdlets with ‘disable’ in the name. All cmdlets are entered by typing them into the PowerShell window and hitting ↵ Enter ."
    },
    {
      "title": "Use “Get-Help” to get info on a certain cmdlet.",
      "content": "Use “Get-Help” to get info on a certain cmdlet. This cmdlet will give you all the information regarding another cmdlet, most importantly syntax for how the target cmdlet is used. For example: “Get-Help Get-Process” will display all the usable information for the ‘Get-Process’ cmdlet."
    },
    {
      "title": "Use “Get-Process” to use a process running on a computer.",
      "content": "Use “Get-Process” to use a process running on a computer. Alone this will display a full list of processes running on your computer. With a modifier, you can single out processes coming from a specific application. For example: “Get-Process winword” will display all processes being run by Microsoft Word. Similarly, “Start-Process” can be used to launch an instance of an application/process."
    },
    {
      "title": "Use “Get-Member” to see properties or methods of an object.",
      "content": "Use “Get-Member” to see properties or methods of an object. This cmdlet needs an object ‘piped’ to it in order to be useful. This is done by adding a “|” between an object and the “Get-Member” cmdlet. For example: “Get-Process | Get-Member” will pipe the Get-Process cmdlet to Get-Member, and Get-Member will list all of the properties and methods you can utilize when scripting with Get-Process."
    },
    {
      "title": "Use “Where-Object” to select objects based on criteria.",
      "content": "Use “Where-Object” to select objects based on criteria. The criteria in Where-Object is set by using the following formatting: “{$_[object] [operator] [parameter] }”. Where-Object also needs an object piped to it. For example: “Get-Process | Where-Object { $_.name -eq “notepad” }” will run Get-Process with the limitation where the object’s name is equal to “notepad”. Other operators include: “-lt” (less than), “-gt” (greater than), “-le” (less than or equal to), “-ge” (greater than or equal to), “-ne” (not equal to), or “-like” (pattern matching). [1] X Research source Parameters using strings (words) must be enclosed in quotations marks. This is not necessary for integers (numbers)."
    }
  ]
}