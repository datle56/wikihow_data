{
  "url": "https://www.wikihow.com/Set-Up-C%2B%2B-and-Write-Code-on-Xcode",
  "title": "How to Set Up C++ and Write Code on Xcode",
  "steps": [
    {
      "title": "Download Xcode from the App Store.",
      "content": "Download Xcode from the App Store. Be aware that Xcode can only be purchased through an Apple device only such as a MacBook, iPhone, iPad, etc. Non-apple users can set up C++ using other IDEs (Integrated Development Environments) such as Visual Studio or CodeBlocks."
    },
    {
      "title": "Open Xcode and agree to the terms and conditions.",
      "content": "Open Xcode and agree to the terms and conditions. This will then install a few components for your computer. It is crucial to accept these terms and conditions as you won't be able to use Xcode without them."
    },
    {
      "title": "Select the icon that says Create a new Xcode project.",
      "content": "Select the icon that says Create a new Xcode project . This will help you make the C++ application that you've thought of making."
    },
    {
      "title": "Choose a template for the Xcode project.",
      "content": "Choose a template for the Xcode project. Pick macOS and select Command Line Tool"
    },
    {
      "title": "Give the Xcode project a name, organization name, and organization identifier.",
      "content": "Give the Xcode project a name, organization name, and organization identifier. This can be any identifier of your preference. Pick C++ as the Language for the Xcode project. It is very important that C++ is chosen as the main language."
    },
    {
      "title": "Select a location for the Xcode project.",
      "content": "Select a location for the Xcode project. This can be anywhere from a folder, your desktop, or a device where you'd like to save the project. Creating a new folder just for C++ applications would be a useful idea."
    },
    {
      "title": "Click main.cpp to get access to the code.",
      "content": "Click main.cpp to get access to the code. Erase the entire code so you can rewrite the previous code on your own. This can be a good way to start off C++ for any person that is a beginner."
    },
    {
      "title": "Add a header for the code to run at the very top.",
      "content": "Add a header for the code to run at the very top. Use #include <iostream> . This is essentially just a library for the C++ language which supports the input and output stream for your code. The term iostream itself stands for input/output stream. It is required to add this for any coding that you do."
    },
    {
      "title": "Introduce the namespace under the header.",
      "content": "Introduce the namespace under the header. This will prevent naming conflicts and help organize your code. This would be known as using namespace std; It is required to have this namespace, or else the code won't be successful."
    },
    {
      "title": "Write int main() right underneath.",
      "content": "Write int main() right underneath. This is the main function of the C++ program. The int is the return value whereas main represents the main function for your code. There can only be one main function for a C++ program."
    },
    {
      "title": "Follow up by adding two curved brackets, {}, which will be the body of the function.",
      "content": "Follow up by adding two curved brackets, {}, which will be the body of the function. This is where the code will be written."
    },
    {
      "title": "Hit enter on your keyboard in the middle of the brackets to make one bracket be at the end of the code.",
      "content": "Hit enter on your keyboard in the middle of the brackets to make one bracket be at the end of the code. Without these brackets, the code will continue to have errors. Spacing out the brackets gives more area for the user to type out their code and keep it organized."
    },
    {
      "title": "Add statements such as cout, which is the output of the function.",
      "content": "Add statements such as cout , which is the output of the function. Make sure it is inside the middle of the bracket to create a working code. Placing cout outside the brackets will cause the program to fail. Be aware that cout will work for our code because we included #include<iostream> from a few steps earlier. Adding statements allows you to further type out your code. Although it points out an error, this can easily be fixed once the final code is complete."
    },
    {
      "title": "Place the operator for the function,<<, right next to the cout.",
      "content": "Place the operator for the function, << , right next to the cout. Operators help us make our code with cout. We are using a binary operator in this example."
    },
    {
      "title": "Insert quotation marks and write a sentence.",
      "content": "Insert quotation marks and write a sentence. For this example, use “Hello World!” Any sentence of your preference can be used, but for this case it uses \"Hello World!\""
    },
    {
      "title": "Put two more operators,<<, to wrap up your code.",
      "content": "Put two more operators, << , to wrap up your code. You are almost done with your code."
    },
    {
      "title": "Finish the first line of code with endl.",
      "content": "Finish the first line of code with endl . Endl wraps up the line and allows the user to start a new line of code. It informs our cout that there is no more code being added and that a new line needs to be integrated inside the function."
    },
    {
      "title": "Add a semicolon right after endl to conclude the end of that specific line.",
      "content": "Add a semicolon right after endl to conclude the end of that specific line. This is the end for the code."
    },
    {
      "title": "Run the code by clicking Run Program on the top left of Xcode.",
      "content": "Run the code by clicking Run Program on the top left of Xcode. If the screen says Build Succeeded then the user has made a successful code. Since \"Hello World!\" was typed out from a few steps prior, it should be what comes out of the output."
    },
    {
      "title": "Check the output on the bottom of the screen to see the code appear.",
      "content": "Check the output on the bottom of the screen to see the code appear. Congratulations you've just created your own code!"
    }
  ]
}